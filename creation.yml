- name: ansible play book for creating the instances
  hosts: local
  connection: local
  become: yes
  vars: 
    vpc_id: subnet-0d3c945e4107297ee
    ami_id: ami-09c813fb71547fc4f
    sg: sg-04ee5dc1d26b0b187
    zone: "daws19.online"
    instances:
      - frontend
      - backend
      - mysql
  tasks: 

    - name: installing the pip modules in the instance 
      ansible.builtin.pip:
        name: botocore
    
    - name: installing the pip modules in the instance 
      ansible.builtin.pip:
        name: boto3

    - name: creating instances
      amazon.aws.ec2_instance:
       name: "{{ item }}"
       vpc_subnet_id: "{{ vpc_id }}"
       instance_type: t3.micro
       security_groups:
          - "{{ sg }}"
       image_id: "{{ ami_id }}"
       region: us-east-1
      loop: "{{ instances }}"
      register: instance

    - name: printing the information from the register
      ansible.builtin.debug:
        msg: " the information gathered is : {{ instance }}"
       
    - name: creating the route53 records for private ip_address
      amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ item.item }}.{{ zone }}"
        type: A
        ttl: 1
        value: "{{ item.instances[0].private_ip_address }}"
        wait: true
        overwrite: true
      loop: "{{ instance.results }}"

    - name: creating the route53 records for public ip_address
      amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ zone }}"
        type: A
        ttl: 1
        value: "{{ item.instances[0].public_ip_address }}"
        wait: true
        overwrite: true
      loop: "{{ instance.results }}"
      when: item.item == "frontend"
    
 
